/*
 * Given two strings s and t, write a function to determine if t is an anagram of s.

 * For example,
 *     s = "anagram", t = "nagaram", return true.
 *     s = "rat", t = "car", return false.

 * Note:
 *     You may assume the string contains only lowercase alphabets.

 * tag: map

 * Author : Dawei Li

 */

#include <string>
#include <map>
using namespace std;

class Solution {
public:
    bool isAnagram(string s, string t) {
        
        int sLength = s.length();
        
        if( sLength != t.length() )
        {
            return false;
        }
        
        map< char, int > charMaps;
        map< char, int > charMapt;
        
        for( int iIndex = 0; iIndex < sLength; iIndex++ )
        {
            charMaps[s[iIndex]]++;
            charMapt[t[iIndex]]++;
        }
        
        return (charMaps == charMapt);
    }
};

int main( int argc, char ** argv )
{
	string s = "isAnagram(string s, string t)";
	string t = "sttnng tAnriam(sr), ig sagrsi";

	Solution sln;
	bool ret = sln.isAnagram( s, t );
	return 0;
}
